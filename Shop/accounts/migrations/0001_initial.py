# Generated by Django 4.1.9 on 2023-08-14 14:16

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Invalid Phone number. Phone number must be like: +989XXXXXXXXX or 09XXXXXXXXX', regex='^(\\+989|09)+\\d{9}$')], verbose_name='Phone Number')),
                ('code', models.PositiveSmallIntegerField(verbose_name='Code')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
            ],
            options={
                'verbose_name': 'Otp Code',
                'verbose_name_plural': 'Otp Codes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Phone number. Phone number must be like: +989XXXXXXXXX or 09XXXXXXXXX', regex='^(\\+989|09)+\\d{9}$')], verbose_name='Phone Number')),
                ('full_name', models.CharField(max_length=50, verbose_name='Full Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activation Status')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin Status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
